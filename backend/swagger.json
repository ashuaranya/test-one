{
  "openapi": "3.0.0",
  "info": {
    "title": "GitHub Integration API",
    "version": "1.0.0",
    "description": "API for GitHub OAuth integration and data sync with enhanced collection fetching capabilities."
  },
  "servers": [
    { "url": "http://localhost:3000" }
  ],
  "components": {
    "schemas": {
      "PaginationMetadata": {
        "type": "object",
        "properties": {
          "page": { "type": "integer", "description": "Current page number" },
          "limit": { "type": "integer", "description": "Number of items per page" },
          "total": { "type": "integer", "description": "Total number of items" },
          "totalPages": { "type": "integer", "description": "Total number of pages" },
          "hasNext": { "type": "boolean", "description": "Whether there is a next page" },
          "hasPrev": { "type": "boolean", "description": "Whether there is a previous page" }
        }
      },
      "CollectionData": {
        "type": "object",
        "properties": {
          "count": { "type": "integer", "description": "Number of items in collection" },
          "name": { "type": "string", "description": "Display name of collection" },
          "columns": {
            "type": "array",
            "description": "Column definitions for data grid display",
            "items": {
              "type": "object",
              "properties": {
                "field": { "type": "string", "description": "Field name in the data" },
                "headerName": { "type": "string", "description": "Display name for the column header" },
                "type": { "type": "string", "description": "Data type (string, date, image, etc.)" },
                "width": { "type": "integer", "description": "Column width in pixels" },
                "sortable": { "type": "boolean", "description": "Whether the column can be sorted" },
                "searchable": { "type": "boolean", "description": "Whether the column can be searched" },
                "filterable": { "type": "boolean", "description": "Whether the column can be filtered" }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "PageParam": {
        "name": "page",
        "in": "query",
        "description": "Page number for pagination",
        "required": false,
        "schema": { "type": "integer", "default": 1, "minimum": 1 }
      },
      "LimitParam": {
        "name": "limit",
        "in": "query",
        "description": "Number of items per page",
        "required": false,
        "schema": { "type": "integer", "default": 10, "minimum": 1, "maximum": 100 }
      },
      "SearchParam": {
        "name": "search",
        "in": "query",
        "description": "Search term for filtering results",
        "required": false,
        "schema": { "type": "string" }
      },
      "SortByParam": {
        "name": "sortBy",
        "in": "query",
        "description": "Field to sort by",
        "required": false,
        "schema": { "type": "string" }
      },
      "SortOrderParam": {
        "name": "sortOrder",
        "in": "query",
        "description": "Sort order (asc or desc)",
        "required": false,
        "schema": { "type": "string", "enum": ["asc", "desc"] }
      }
    }
  },
  "paths": {
    "/api/auth/github": {
      "get": {
        "summary": "Start GitHub OAuth2 login",
        "responses": {
          "302": { "description": "Redirect to GitHub OAuth" }
        }
      }
    },
    "/api/auth/github/callback": {
      "get": {
        "summary": "GitHub OAuth2 callback",
        "responses": {
          "302": { "description": "Redirect to frontend with status" }
        }
      }
    },
    "/api/auth/remove": {
      "post": {
        "summary": "Remove GitHub integration",
        "responses": {
          "200": { "description": "Integration removed" },
          "401": { "description": "Not authenticated" }
        }
      }
    },
    "/api/github/sync": {
      "get": {
        "summary": "Sync all GitHub data for authenticated user",
        "responses": {
          "200": { "description": "Data synced" },
          "401": { "description": "Not authenticated" }
        }
      }
    },
    "/api/github/collections": {
      "get": {
        "summary": "Get all collections with counts",
        "description": "Returns a summary of all available collections with their item counts",
        "responses": {
          "200": {
            "description": "Collections summary",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "organizations": { "$ref": "#/components/schemas/CollectionData" },
                        "repositories": { "$ref": "#/components/schemas/CollectionData" },
                        "commits": { "$ref": "#/components/schemas/CollectionData" },
                        "pulls": { "$ref": "#/components/schemas/CollectionData" },
                        "issues": { "$ref": "#/components/schemas/CollectionData" },
                        "changelogs": { "$ref": "#/components/schemas/CollectionData" },
                        "users": { "$ref": "#/components/schemas/CollectionData" }
                      }
                    },
                    "totalCollections": { "type": "integer" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/github/organizations": {
      "get": {
        "summary": "Get organizations with pagination and filtering",
        "description": "Get organizations with support for pagination, search, and sorting",
        "parameters": [
          { "$ref": "#/components/parameters/PageParam" },
          { "$ref": "#/components/parameters/LimitParam" },
          { "$ref": "#/components/parameters/SearchParam" },
          { "$ref": "#/components/parameters/SortByParam" },
          { "$ref": "#/components/parameters/SortOrderParam" }
        ],
        "responses": {
          "200": {
            "description": "List of organizations with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": { "type": "array", "items": { "type": "object" } },
                    "pagination": { "$ref": "#/components/schemas/PaginationMetadata" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/github/repositories": {
      "get": {
        "summary": "Get repositories with pagination and filtering",
        "description": "Get repositories with support for pagination, search, filtering by organization, and sorting",
        "parameters": [
          { "$ref": "#/components/parameters/PageParam" },
          { "$ref": "#/components/parameters/LimitParam" },
          { "$ref": "#/components/parameters/SearchParam" },
          { "$ref": "#/components/parameters/SortByParam" },
          { "$ref": "#/components/parameters/SortOrderParam" },
          {
            "name": "orgId",
            "in": "query",
            "description": "Filter by organization ID",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of repositories with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": { "type": "array", "items": { "type": "object" } },
                    "pagination": { "$ref": "#/components/schemas/PaginationMetadata" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/github/commits": {
      "get": {
        "summary": "Get commits with pagination and filtering",
        "description": "Get commits with support for pagination, search, filtering by repository and author, and sorting",
        "parameters": [
          { "$ref": "#/components/parameters/PageParam" },
          { "$ref": "#/components/parameters/LimitParam" },
          { "$ref": "#/components/parameters/SearchParam" },
          { "$ref": "#/components/parameters/SortByParam" },
          { "$ref": "#/components/parameters/SortOrderParam" },
          {
            "name": "repoId",
            "in": "query",
            "description": "Filter by repository ID",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "author",
            "in": "query",
            "description": "Filter by author login",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of commits with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": { "type": "array", "items": { "type": "object" } },
                    "pagination": { "$ref": "#/components/schemas/PaginationMetadata" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/github/pulls": {
      "get": {
        "summary": "Get pull requests with pagination and filtering",
        "description": "Get pull requests with support for pagination, search, filtering by repository and state, and sorting",
        "parameters": [
          { "$ref": "#/components/parameters/PageParam" },
          { "$ref": "#/components/parameters/LimitParam" },
          { "$ref": "#/components/parameters/SearchParam" },
          { "$ref": "#/components/parameters/SortByParam" },
          { "$ref": "#/components/parameters/SortOrderParam" },
          {
            "name": "repoId",
            "in": "query",
            "description": "Filter by repository ID",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Filter by pull request state",
            "required": false,
            "schema": { "type": "string", "enum": ["open", "closed", "all"] }
          }
        ],
        "responses": {
          "200": {
            "description": "List of pull requests with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": { "type": "array", "items": { "type": "object" } },
                    "pagination": { "$ref": "#/components/schemas/PaginationMetadata" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/github/issues": {
      "get": {
        "summary": "Get issues with pagination and filtering",
        "description": "Get issues with support for pagination, search, filtering by repository and state, and sorting",
        "parameters": [
          { "$ref": "#/components/parameters/PageParam" },
          { "$ref": "#/components/parameters/LimitParam" },
          { "$ref": "#/components/parameters/SearchParam" },
          { "$ref": "#/components/parameters/SortByParam" },
          { "$ref": "#/components/parameters/SortOrderParam" },
          {
            "name": "repoId",
            "in": "query",
            "description": "Filter by repository ID",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Filter by issue state",
            "required": false,
            "schema": { "type": "string", "enum": ["open", "closed", "all"] }
          }
        ],
        "responses": {
          "200": {
            "description": "List of issues with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": { "type": "array", "items": { "type": "object" } },
                    "pagination": { "$ref": "#/components/schemas/PaginationMetadata" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/github/changelogs": {
      "get": {
        "summary": "Get changelogs with pagination and filtering",
        "description": "Get changelogs with support for pagination, filtering by issue, and sorting",
        "parameters": [
          { "$ref": "#/components/parameters/PageParam" },
          { "$ref": "#/components/parameters/LimitParam" },
          { "$ref": "#/components/parameters/SortByParam" },
          { "$ref": "#/components/parameters/SortOrderParam" },
          {
            "name": "issueId",
            "in": "query",
            "description": "Filter by issue ID",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of changelogs with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": { "type": "array", "items": { "type": "object" } },
                    "pagination": { "$ref": "#/components/schemas/PaginationMetadata" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/github/users": {
      "get": {
        "summary": "Get users with pagination and filtering",
        "description": "Get users with support for pagination, search, and sorting",
        "parameters": [
          { "$ref": "#/components/parameters/PageParam" },
          { "$ref": "#/components/parameters/LimitParam" },
          { "$ref": "#/components/parameters/SearchParam" },
          { "$ref": "#/components/parameters/SortByParam" },
          { "$ref": "#/components/parameters/SortOrderParam" }
        ],
        "responses": {
          "200": {
            "description": "List of users with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": { "type": "array", "items": { "type": "object" } },
                    "pagination": { "$ref": "#/components/schemas/PaginationMetadata" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/github/integration": {
      "get": {
        "summary": "Get integration data",
        "responses": { "200": { "description": "Integration data" } }
      }
    }
  }
} 